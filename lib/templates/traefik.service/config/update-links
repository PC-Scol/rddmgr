#!/bin/bash
# -*- coding: utf-8 mode: sh -*- vim:sw=4:sts=4:et:ai:si:sta:fenc=utf-8
source /etc/ulibauto || exit 1

function display_help() {
    uecho "$scriptname: mettre à jour les liens dans le répertoire de certificats

USAGE
    $scriptname CERTSDIRs...

Si aucun répertoire n'est spécifié et que l'option -a n'est pas utilisée,
prendre par défaut le répertoire courant

Les certificats peuvent être placés directement à la racine des répertoires
CERTSDIRs, ou organisés dans des sous-répertoires. Dans chacun des répertoires,
un fichier autorité doit exister avec le nom \${dirname}-CA.crt
Dans chacun des répertoires, le contenu du fichier autorité est automatiquement
rajouté à la fin des fichiers certificats

OPTIONS
    -f, --certs-toml CERTSTOML
        Spécifier le fichier certs.toml à mettre à jour. Par défaut, prendre le
        fichier certs.toml situé dans le répertoire du script.
    -a, --auto-defaults
        Ajouter automatiquement les répertoires certs.prod, certs.test et
        certs.devel, s'ils existent dans le répertoire du script"
}

function add_to_certstoml() {
    local crtlink="$1" keylink="$2"
    if ! grep -qF "\"/certs/$crtlink\"" "$certstoml"; then
        echo >>"$certstoml" "\
[[tls.certificates]]
certFile = \"/certs/$crtlink\"
keyFile = \"/certs/$keylink\""
    fi
}

function process_crts() {
    local cadir="$1"; shift
    local prefix="$1"; shift
    local cafile="$1"; shift

    local crt key crtlink keylink
    local refcount refca crtca
    if [ -n "$cafile" ]; then
        setx refcount=wc -l <"$cafile"
        refca="$(<"$cafile")"
    fi

    for crt in "$@"; do
        crt="${crt#$cadir/}"
        key="${crt%.crt}.key"
        # ignorer les liens
        [ -L "$prefix$crt" ] && continue
        # ignorer les certificats autorité
        [ -f "$prefix$key" ] || continue
        # rajouter l'autorité si nécessaire
        if [ -n "$cafile" ]; then
            crtca="$(tail -n"$refcount" <"$prefix$crt")"
            if [ "$crtca" != "$refca" ]; then
                estep "ajout CA --> $prefix$crt"
                cat "$cafile" >>"$prefix$crt"
            fi
        fi
        # créer les liens
        crtlink="${crt%.crt}"
        crtlink="${crtlink%-*}"
        if [ "${crtlink%-test}" != "$crtlink" ]; then
            crtlink="${crtlink%-test}"
        elif [ "${crtlink%-dev}" != "$crtlink" ]; then
            crtlink="${crtlink%-dev}"
        fi
        crtlink="$crtlink.crt"
        keylink="${crtlink%.crt}.key"
        estep "$crtlink --> $crt"
        ln -sf "$prefix$crt" "$crtlink"
        ln -sf "$prefix$key" "$keylink"
        # mettre à jour le fichier certs.toml
        add_to_certstoml "$crtlink" "$keylink"
    done
}

certstoml=
auto_defaults=
args=(
    --help '$exit_with display_help'
    -f:,--certs-toml: certstoml=
    -a,--auto-defaults auto_defaults=1
)
parse_args "$@"; set -- "${args[@]}"

[ -n "$certstoml" ] || certstoml="$scriptdir/certs.toml"
setx certstoml=abspath "$certstoml"

if [ -z "$auto_defaults" -a $# -eq 0 -a "$scriptdir" == "$(pwd)" ]; then
    ewarn "Vous n'êtes pas dans le répertoire de certificats."
    ask_yesno "Voulez-vous activer l'option --auto-defaults?" O && auto_defaults=1
fi

certsdirs=()
if [ -n "$auto_defaults" ]; then
    for certsdir in "$scriptdir"/certs.{prod,test,devel}; do
        [ -d "$certsdir" ] || continue
        certsdirs+=("$certsdir")
    done
elif [ $# -eq 0 ]; then
    set -- .
fi
for certsdir in "$@"; do
    [ -d "$certsdir" ] || continue
    setx certsdir=abspath "$certsdir"
    certsdirs+=("$certsdir")
done

setx cwd=pwd
for certsdir in "${certsdirs[@]}"; do
    cd "$cwd"
    etitle "$(ppath2 "$certsdir")"
    cd "$certsdir"

    setx cadirname=basename "$(pwd)"
    cafile="${cadirname}-CA.crt"
    [ -f "$cafile" ] || cafile=

    # traiter d'abord les certificats à la racine
    array_lsfiles crts . "*.crt"
    process_crts "." "" "$cafile" "${crts[@]}"

    # traiter ensuite les certificats dans les répertoires
    array_lsdirs cadirs .
    for cadir in "${cadirs[@]}"; do
        setx cadirname=basename "$cadir"
        cafile="$cadir/${cadirname}-CA.crt"
        if [ ! -f "$cafile" ]; then
            eerror "$cadirname: il manque le fichier autorité. ce répertoire sera ignoré"
            continue
        fi

        etitle "$cadirname"
        array_lsfiles crts "$cadir" "*.crt"
        process_crts "$cadir" "$cadirname/" "$cafile" "${crts[@]}"
        eend
    done

    eend
done
